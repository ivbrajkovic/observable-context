{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useState } from \"react\";\nimport { Observable } from \"../class/Observable\";\nimport useObservableContextFactory from \"hooks/useObservableContextFactory\";\nimport useSubscribeFactory from \"hooks/useSubscribeFactory\";\nimport useSubscribeManyFactory from \"hooks/useSubscribeManyFactory\";\nimport useSubscribeAllFactory from \"hooks/useSubscribeAllFactory\";\nexport function ObservableContextFactory() {\n    const ObservableContext = createContext(null);\n    function StateContextProvider(props) {\n        const [observable] = useState(() => {\n            const o = new Observable(props.initial);\n            props.middlewares?.forEach((middleware) => o.use(middleware));\n            return o;\n        });\n        return (_jsx(ObservableContext.Provider, { value: observable, children: props.children }));\n    }\n    const useObservableContext = useObservableContextFactory(ObservableContext);\n    const useSubscribe = useSubscribeFactory(useObservableContext);\n    const useSubscribeMany = useSubscribeManyFactory(useObservableContext);\n    const useSubscribeAll = useSubscribeAllFactory(useObservableContext);\n    return [\n        StateContextProvider,\n        useObservableContext,\n        useSubscribe,\n        useSubscribeMany,\n        useSubscribeAll,\n    ];\n}\n//# sourceMappingURL=ObservableContextFactory.js.map","references":["C:/Users/Ivan/Desktop/utility-creator-ts/node_modules/@types/react/index.d.ts","C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/src/class/Observable.tsx","C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/src/hooks/useObservableContextFactory.ts","C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/src/hooks/useSubscribeFactory.ts","C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/src/hooks/useSubscribeManyFactory.ts","C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/src/hooks/useSubscribeAllFactory.ts"],"map":"{\"version\":3,\"file\":\"ObservableContextFactory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/factory/ObservableContextFactory.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAa,aAAa,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC3D,OAAO,EAAc,UAAU,EAAE,MAAM,qBAAqB,CAAC;AAC7D,OAAO,2BAA2B,MAAM,mCAAmC,CAAC;AAC5E,OAAO,mBAAmB,MAAM,2BAA2B,CAAC;AAC5D,OAAO,uBAAuB,MAAM,+BAA+B,CAAC;AACpE,OAAO,sBAAsB,MAAM,8BAA8B,CAAC;AAKlE,MAAM,UAAU,wBAAwB;IACtC,MAAM,iBAAiB,GAAG,aAAa,CAAuB,IAAI,CAAC,CAAC;IAQpE,SAAS,oBAAoB,CAAC,KAAmC;QAC/D,MAAM,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAgB,GAAG,EAAE;YAChD,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACxC,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9D,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QAEH,OAAO,CACL,KAAC,iBAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE,UAAU,YAC1C,KAAK,CAAC,QAAQ,GACY,CAC9B,CAAC;IACJ,CAAC;IAED,MAAM,oBAAoB,GAAG,2BAA2B,CAAC,iBAAiB,CAAC,CAAC;IAC5E,MAAM,YAAY,GAAG,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;IAC/D,MAAM,gBAAgB,GAAG,uBAAuB,CAAC,oBAAoB,CAAC,CAAC;IACvE,MAAM,eAAe,GAAG,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;IAErE,OAAO;QACL,oBAAoB;QACpB,oBAAoB;QACpB,YAAY;QACZ,gBAAgB;QAChB,eAAe;KACP,CAAC;AACb,CAAC\"}","dts":{"name":"C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/types/factory/ObservableContextFactory.d.ts","writeByteOrderMark":false,"text":"import { ReactNode } from \"react\";\nimport { Middleware, Observable } from \"../class/Observable\";\nexport type ObservableContext<T extends Record<string, unknown>> = Observable<T> | null;\nexport declare function ObservableContextFactory<T extends Record<string, unknown>>(): readonly [(props: {\n    initial: T;\n    children: ReactNode;\n    middlewares?: Middleware<T>[] | undefined;\n}) => import(\"react/jsx-runtime\").JSX.Element, () => Observable<T>, <K extends keyof T>(key: K, handler?: ((value: T[K]) => void) | undefined) => readonly [T[K], (value: T[K]) => T[K]], <K_1 extends keyof T>(keys: K_1[], handler?: ((key: K_1, value: T[K_1]) => void) | undefined) => readonly [Partial<T>, (updates: { [key in K_1]?: T[key] | undefined; }) => void], (handler?: ((key: keyof T, value: T[keyof T]) => void) | undefined) => readonly [T, (updates: Partial<T>) => void]];\n"}}
