{"code":"import { useCallback, useEffect, useRef, useState } from \"react\";\nconst useSubscribeManyFactory = (useObservableContext) => {\n    const useSubscribeMany = (keys, handler) => {\n        const observable = useObservableContext();\n        const [state, setState] = useState(() => keys.reduce((acc, key) => {\n            acc[key] = observable.observed[key];\n            return acc;\n        }, {}));\n        const handlerRef = useRef(handler);\n        useEffect(() => {\n            handlerRef.current = handler;\n        }, [handler]);\n        useEffect(() => {\n            return observable.subscribeMany(keys, (key, value) => {\n                if (handlerRef.current)\n                    handlerRef.current(key, value);\n                else\n                    setState((state) => ({ ...state, [key]: value }));\n            });\n        }, [keys, observable]);\n        const setValue = useCallback((updates) => Object.entries(updates).forEach(([key, value]) => {\n            observable.observed[key] = value;\n        }), [observable]);\n        return [state, setValue];\n    };\n    return useSubscribeMany;\n};\nexport default useSubscribeManyFactory;\n//# sourceMappingURL=useSubscribeManyFactory.js.map","references":["C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/src/class/Observable.tsx","C:/Users/Ivan/Desktop/utility-creator-ts/node_modules/@types/react/index.d.ts"],"map":"{\"version\":3,\"file\":\"useSubscribeManyFactory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useSubscribeManyFactory.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEjE,MAAM,uBAAuB,GAAG,CAC9B,oBAAyC,EACzC,EAAE;IACF,MAAM,gBAAgB,GAAG,CACvB,IAAS,EACT,OAAuC,EACvC,EAAE;QACF,MAAM,UAAU,GAAG,oBAAoB,EAAE,CAAC;QAE1C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CACtC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACvB,GAAG,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACpC,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAgB,CAAC,CACrB,CAAC;QAEF,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QACnC,SAAS,CAAC,GAAG,EAAE;YACb,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;QAC/B,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;QAEd,SAAS,CAAC,GAAG,EAAE;YACb,OAAO,UAAU,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;gBACnD,IAAI,UAAU,CAAC,OAAO;oBAAE,UAAU,CAAC,OAAO,CAAC,GAAQ,EAAE,KAAa,CAAC,CAAC;;oBAC/D,QAAQ,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QAEvB,MAAM,QAAQ,GAAG,WAAW,CAC1B,CAAC,OAEA,EAAE,EAAE,CACH,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAC/C,UAAU,CAAC,QAAQ,CAAC,GAAc,CAAC,GAAG,KAAmB,CAAC;QAC5D,CAAC,CAAC,EACJ,CAAC,UAAU,CAAC,CACb,CAAC;QAEF,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAU,CAAC;IACpC,CAAC,CAAC;IAEF,OAAO,gBAAgB,CAAC;AAC1B,CAAC,CAAC;AAEF,eAAe,uBAAuB,CAAC\"}","dts":{"name":"C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/types/hooks/useSubscribeManyFactory.d.ts","writeByteOrderMark":false,"text":"import { Observable } from \"class/Observable\";\ndeclare const useSubscribeManyFactory: <T extends Record<string, unknown>>(useObservableContext: () => Observable<T>) => <K extends keyof T>(keys: K[], handler?: ((key: K, value: T[K]) => void) | undefined) => readonly [Partial<T>, (updates: { [key in K]?: T[key] | undefined; }) => void];\nexport default useSubscribeManyFactory;\n"}}
