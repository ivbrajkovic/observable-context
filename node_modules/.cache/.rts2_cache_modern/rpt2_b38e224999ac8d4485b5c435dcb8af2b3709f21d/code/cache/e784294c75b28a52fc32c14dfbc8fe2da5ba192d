{"code":"import { useCallback, useEffect, useRef, useState } from \"react\";\nconst useSubscribeFactory = (useObservableContext) => {\n    const useSubscribe = (key, handler) => {\n        const observable = useObservableContext();\n        const [state, setState] = useState(() => observable.observed[key]);\n        const handlerRef = useRef(handler ?? setState);\n        useEffect(() => {\n            handlerRef.current = handler ?? setState;\n        }, [handler]);\n        useEffect(() => {\n            return observable.subscribe(key, (_, value) => handlerRef.current(value));\n        }, [key, observable]);\n        const setValue = useCallback((value) => (observable.observed[key] = value), [key, observable]);\n        return [state, setValue];\n    };\n    return useSubscribe;\n};\nexport default useSubscribeFactory;\n//# sourceMappingURL=useSubscribeFactory.js.map","references":["C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/src/class/Observable.tsx","C:/Users/Ivan/Desktop/utility-creator-ts/node_modules/@types/react/index.d.ts"],"map":"{\"version\":3,\"file\":\"useSubscribeFactory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useSubscribeFactory.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEjE,MAAM,mBAAmB,GAAG,CAC1B,oBAAyC,EACzC,EAAE;IACF,MAAM,YAAY,GAAG,CACnB,GAAM,EACN,OAA+B,EAC/B,EAAE;QACF,MAAM,UAAU,GAAG,oBAAoB,EAAE,CAAC;QAE1C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QACnE,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,IAAI,QAAQ,CAAC,CAAC;QAE/C,SAAS,CAAC,GAAG,EAAE;YACb,UAAU,CAAC,OAAO,GAAG,OAAO,IAAI,QAAQ,CAAC;QAC3C,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;QAEd,SAAS,CAAC,GAAG,EAAE;YACb,OAAO,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5E,CAAC,EAAE,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC;QAEtB,MAAM,QAAQ,GAAG,WAAW,CAC1B,CAAC,KAAW,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,EACnD,CAAC,GAAG,EAAE,UAAU,CAAC,CAClB,CAAC;QAEF,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAU,CAAC;IACpC,CAAC,CAAC;IAEF,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC\"}","dts":{"name":"C:/Users/Ivan/Desktop/utility-creator-ts/packages/observable-context/types/hooks/useSubscribeFactory.d.ts","writeByteOrderMark":false,"text":"import { Observable } from \"class/Observable\";\ndeclare const useSubscribeFactory: <T extends Record<string, unknown>>(useObservableContext: () => Observable<T>) => <K extends keyof T>(key: K, handler?: ((value: T[K]) => void) | undefined) => readonly [T[K], (value: T[K]) => T[K]];\nexport default useSubscribeFactory;\n"}}
